<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:p="http://www.springframework.org/schema/p"
    xmlns:util="http://www.springframework.org/schema/util"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xsi:schemaLocation="http://www.springframework.org/schema/beans 
                        http://www.springframework.org/schema/beans/spring-beans.xsd
                        http://www.springframework.org/schema/util
                        http://www.springframework.org/schema/util/spring-util.xsd
                        http://www.springframework.org/schema/context
                        http://www.springframework.org/schema/context/spring-context.xsd
                        http://www.springframework.org/schema/aop
                        http://www.springframework.org/schema/aop/spring-aop.xsd">

	<!-- 自动检测，（构造型注解） -->
	<context:component-scan base-package="com.mfzhang">
		<!-- 过滤器：1、assignable，Clothes实现类不需要通过@component注解组件，就可以注册为spring bean（及自动注册Clothes实现类）。
		           2、annotation，使用指定注解的类才可以注册为spring bean。 -->
		<context:include-filter type="assignable" expression="com.mfzhang.api.service.Clothes"/>
		<context:include-filter type="assignable" expression="com.mfzhang.api.service.Dialect"/>
		
		<!--  -->
		<!-- <context:exclude-filter type="annotation" expression="com.mfzhang.component.annotation.DialectQualifier"/>
		<context:exclude-filter type="annotation" expression="com.mfzhang.component.annotation.AbcClothesQualifier"/> -->
	</context:component-scan>
	
	
	<!-- aop，切面配置 -->
	<aop:config>
	
		<!-- 定义切面：包括通知和切点 -->
		<aop:aspect ref="audience">
			<!-- 切点 -->
			<aop:pointcut expression="execution(* com.mfzhang.api.service.Perfomer.perform(..))" id="pointcut"/>
			
			<!-- <aop:before method="takeSeats" pointcut-ref="pointcut"/>
			<aop:before method="turnOffMobile" pointcut-ref="pointcut"/>
			<aop:after-returning method="applaud" pointcut-ref="pointcut"/>
			<aop:after-throwing method="demandRefund" pointcut-ref="pointcut"/> -->
			
			<aop:around method="watchPerformance" pointcut-ref="pointcut"/>
		</aop:aspect>
		
		<aop:aspect ref="megician">
			<aop:pointcut expression="execution(* com.mfzhang.api.service.Thinker.thinkOfSomething(..)) and args(thoughts)" id="pointcut2"/>
			
			<aop:before method="interceptThoughts" pointcut-ref="pointcut2" arg-names="thoughts"/>
			
			<!-- aop引入新功能 -->
			<!-- <aop:declare-parents types-matching="com.mfzhang.api.service.Thinker+" 
			implement-interface="com.mfzhang.api.service.Speaker" delegate-ref="speakerVolunteer"/> -->
		</aop:aspect>
	</aop:config>
	
	<!-- 自动创建基于代理的切面，仅仅使用@Aspect注解指引 -->
	<aop:aspectj-autoproxy></aop:aspectj-autoproxy>
	
</beans>